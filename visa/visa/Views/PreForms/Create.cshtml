@model visa.Models.PreForm

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Registration</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <h4 class="text-bold text-danger">Baisc Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.SerialNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SerialNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SerialNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
              
                    @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>

                    @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })

             </div>
        
            <div class="col-md-3">
                
                 @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label " }) <span class="text-danger">*</span>

                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })

              
            </div>
           
            <div class="col-md-3">
                
                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">

                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownListFor(model=>model.Gender,new SelectList(Enum.GetValues(typeof(visa.Models.GenderType))),
                    "Select Gender",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
               
                    @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
              
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label " })
                
                    @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
              
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
           
                    @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
               
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            
            </div>
            <div class="col-md-12">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                
                    @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                
            </div>
        </div>
        <h4 class="text-bold text-danger">Qualification Detail</h4>
        <hr />
        <div class="row">
           
            <div class="col-md-6">
                @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label" })
                
                    @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                </div>
            
            <div class="col-md-6">
                @Html.LabelFor(model => model.Ielts, htmlAttributes: new { @class = "control-label" })
                
                    @Html.EditorFor(model => model.Ielts, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ielts, "", new { @class = "text-danger" })
                </div>
            

        </div>
        <h4 class="text-bold text-danger">Doc's Detail</h4>
        <hr />
        <div class="row">
            
            <div class="col-md-6">
                @Html.LabelFor(model => model.Passport, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                
                    @Html.EditorFor(model => model.Passport, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passport, "", new { @class = "text-danger" })
               
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.NationalId, htmlAttributes: new { @class = "control-label" })
                
                    @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NationalId, "", new { @class = "text-danger" })
               
            </div>

        </div>
        
        <h4 class="text-bold text-danger">Prefference Detail</h4>
        <hr />
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.PrefCountry, htmlAttributes: new { @class = "control-label" })
              
                    @Html.EditorFor(model => model.PrefCountry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrefCountry, "", new { @class = "text-danger" })
               
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.PrefCollege, htmlAttributes: new { @class = "control-label" })
        
                    @Html.EditorFor(model => model.PrefCollege, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrefCollege, "", new { @class = "text-danger" })
                
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.PrefSubject, htmlAttributes: new { @class = "control-label" }) 
               
                    @Html.EditorFor(model => model.PrefSubject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrefSubject, "", new { @class = "text-danger" })
                
            </div>
            <div class="col-md-12">
                @Html.LabelFor(model => model.RefferedName, htmlAttributes: new { @class = "control-label" })
                
                    @Html.EditorFor(model => model.RefferedName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RefferedName, "", new { @class = "text-danger" })
                
            </div>
            <div class="col-md-12">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
                
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
               
            </div>
        </div>
        
        
        
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="https://code.jquery.com/jquery-1.10.2.js"
        integrity="sha256-it5nQKHTz+34HijZJQkpNBIHsjpV8b6QzMJs9tmOBSo="
        crossorigin="anonymous"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>

        function CheckEmail() {
            debugger;

            var ids = $("#email").val();

            var id = JSON.stringify({ val1: ids })

            var options = { "backdrop": "static", keyboard: true };
            var url = '/Home/Pop';
            $.ajax
           ({
               url: '/PreForms/Check',
               type: 'POST',
               datatype: 'application/json',
               contentType: 'application/json',
               data: id,
               success: function (result) {
                   debugger;
                   if (result === null) {
                       alert("No Data");
                   }
                   $.each($.parseJSON(result), function (i, city) {
                       debugger;



                   }

                   )



               },
               error: function () {
                   alert("Whooaaa! Something went wrong..")
               },





           });
            $("#closbtn").click(function () {
                $('#myModal').modal('show');
            });
        };

</script>
